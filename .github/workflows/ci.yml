name: CI
on:
  pull_request:
    branches: [ develop ]
  push:
    branches: [ develop ]
env:
  SOURCE_DIR: inq-app
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          cd ${{ env.SOURCE_DIR }}
          echo "Installing dependencies..."
          npm install

      - name: Run check format code
        run: |
          cd ${{ env.SOURCE_DIR }}
          echo "Running format..."
          npm run format:check

      - name: Run Coverage test
        run: |
          cd ${{ env.SOURCE_DIR }}
          echo "Running coverage..."
          npm test -- --coverage
        env:
          CI: true
      - name: Build Project
        if: github.event_name == 'push'
        run: |
          cd ${{ env.SOURCE_DIR }}
          echo "Building project..."
          npm run build
      - name: Deploy to Staging
        if: github.event_name == 'push'
        run: |
          cd ${{ env.SOURCE_DIR }}
          echo "Deploying to staging..."
          npx surge --project ./build --domain  unkempt-idea.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
